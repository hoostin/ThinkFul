{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\BreadCrumb.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\"; //import { listDecks} from \"./utils/api/index\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BreadCrumb({\n  decks\n}) {\n  _s();\n\n  const url = useRouteMatch().url;\n  const subUrls = url.split(`/`);\n  const path = useRouteMatch().path;\n  const subPath = path.split(`/`);\n  const list = subUrls.map((aSubUrl, index) => {\n    let className;\n    console.log(index);\n    console.log(aSubUrl);\n    console.log(subPath[index]);\n\n    if (index >= subUrls.length - 1) {\n      className = \"breadcrumb-item active\";\n    } else {\n      className = \"breadcrumb-item\";\n    }\n\n    if (aSubUrl != path[index]) {\n      if (subPath[index] == `:deckId`) {\n        const deck = readDeck(aSubUrl).then(console.log(deck));\n      }\n    } else if (aSubUrl != `decks`) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: className,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  console.log(url);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      class: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BreadCrumb, \"9EW3Jv0xAB3Ly6OKIF9ohFNe1uE=\", false, function () {\n  return [useRouteMatch, useRouteMatch];\n});\n\n_c = BreadCrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadCrumb\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/BreadCrumb.jsx"],"names":["React","useEffect","useState","Link","NavLink","Route","Switch","useParams","useRouteMatch","readDeck","BreadCrumb","decks","url","subUrls","split","path","subPath","list","map","aSubUrl","index","className","console","log","length","deck","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,aANF,QAOO,kBAPP;AAQA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAAA;;AACzC,QAAMC,GAAG,GAAGJ,aAAa,GAAGI,GAA5B;AACA,QAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAW,GAAX,CAAhB;AACA,QAAMC,IAAI,GAAGP,aAAa,GAAGO,IAA7B;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACD,KAAL,CAAY,GAAZ,CAAhB;AACA,QAAMG,IAAI,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,QAAIC,SAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACI,KAAD,CAAnB;;AACD,QAAGA,KAAK,IAAKP,OAAO,CAACW,MAAR,GAAe,CAA5B,EAAiC;AAChCH,MAAAA,SAAS,GAAG,wBAAZ;AACA,KAFD,MAEM;AAAEA,MAAAA,SAAS,GAAE,iBAAX;AAA+B;;AACtC,QAAGF,OAAO,IAAIJ,IAAI,CAACK,KAAD,CAAlB,EACA;AACE,UAAGJ,OAAO,CAACI,KAAD,CAAP,IAAkB,SAArB,EACA;AACE,cAAMK,IAAI,GAAGhB,QAAQ,CAACU,OAAD,CAAR,CAAkBO,IAAlB,CAAwBJ,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAAxB,CAAb;AAED;AACF,KAPD,MAQK,IAAIN,OAAO,IAAK,OAAhB,EACL;AACE,0BAAO;AAAI,QAAA,SAAS,EAAEE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEF,GArBY,CAAb;AAsBAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACE,sBACI;AAAK,kBAAW,YAAhB;AAAA,2BACN;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA,6BACE;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAmC,wBAAa,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArCuBF,U;UACVF,a,EAECA,a;;;KAHSE,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\n//import { listDecks} from \"./utils/api/index\"\r\n\r\nexport default function BreadCrumb({decks}){\r\n  const url = useRouteMatch().url;\r\n  const subUrls = url.split(`/`);\r\n  const path = useRouteMatch().path;\r\n  const subPath = path.split(`/`);\r\n  const list = subUrls.map((aSubUrl, index) => {\r\n    let className;\r\n    console.log(index)\r\n    console.log(aSubUrl)\r\n    console.log(subPath[index])\r\n   if(index >= (subUrls.length-1) ) {\r\n    className = \"breadcrumb-item active\";\r\n   } else{ className =\"breadcrumb-item\" ;}\r\n    if(aSubUrl != path[index])\r\n    {\r\n      if(subPath[index] ==`:deckId`)\r\n      {\r\n        const deck = readDeck(aSubUrl).then( console.log(deck));\r\n       \r\n      }\r\n    }\r\n    else if (aSubUrl != `decks`)\r\n    {\r\n      return <li className={className} >test</li>\r\n    }\r\n\r\n  })\r\n  console.log(url)\r\n    return (\r\n        <nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb\">\r\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Home</li>\r\n  </ol>\r\n</nav>\r\n\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}