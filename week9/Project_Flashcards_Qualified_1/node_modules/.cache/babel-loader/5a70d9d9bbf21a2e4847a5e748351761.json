{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\CardList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\"; //import Header from \"../Header\";\n//import NotFound from \"../NotFound\";\n// import {\n//   Link,\n//   NavLink,\n//   Route,\n//   Switch,\n//   useParams,\n//   useRouteMatch,\n// } from \"react-router-dom\";\n\nimport { listCards } from \"../../utils/api/index\";\nimport Alert from \"../Alert\";\nimport CardView from \"./CardView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList({\n  deck,\n  deckId\n}) {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listCards(deckId, abortController.signal).then(setCards).then(() => {\n      const list = cards.map(card => /*#__PURE__*/_jsxDEV(CardView, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 39\n      }, this));\n      setCardList([...list]);\n    }).catch(console.log(\"bad magnitude 10\"));\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), cardList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CardList, \"MKqRxYqerOC+lhmuBKCmuclxYoo=\");\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/Card/CardList.jsx"],"names":["React","useEffect","useState","useRef","listCards","Alert","CardView","CardList","deck","deckId","cards","setCards","cardList","setCardList","abortController","AbortController","signal","then","list","map","card","catch","console","log","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAlB,EAAgC;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACFD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAX,IAAAA,SAAS,CAACK,MAAD,EAAQK,eAAe,CAACE,MAAxB,CAAT,CAAyCC,IAAzC,CAA8CN,QAA9C,EAAwDM,IAAxD,CACE,MAAM;AACJ,YAAMC,IAAI,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,iBAAS,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAnB,CAAb;AACAP,MAAAA,WAAW,CAAC,CAAC,GAAGK,IAAJ,CAAD,CAAX;AACD,KAJH,EAMAG,KANA,CAMMC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CANN;AAQA,WAAO,MAAMT,eAAe,CAACU,KAAhB,EAAb;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMC;;GAtBuBL,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState,useRef } from \"react\";\r\n//import Header from \"../Header\";\r\n//import NotFound from \"../NotFound\";\r\n// import {\r\n//   Link,\r\n//   NavLink,\r\n//   Route,\r\n//   Switch,\r\n//   useParams,\r\n//   useRouteMatch,\r\n// } from \"react-router-dom\";\r\n\r\nimport { listCards} from \"../../utils/api/index\"\r\nimport Alert from \"../Alert\";\r\nimport CardView from \"./CardView\";\r\n\r\nexport default function CardList({deck,deckId}){\r\n  const [cards,setCards] = useState([]);\r\n  const [cardList, setCardList] = useState([]);\r\nuseEffect(() => {\r\n  const abortController = new AbortController();\r\n  listCards(deckId,abortController.signal).then(setCards).then( \r\n    () => {\r\n      const list = cards.map((card) =><CardView card={card}/> )\r\n      setCardList([...list])\r\n    }\r\n      \r\n).catch(console.log(\"bad magnitude 10\"));\r\n  \r\n  return () => abortController.abort();\r\n}, [])\r\n\r\nreturn (\r\n  <div>\r\n    <h2>Cards</h2>\r\n    {cardList}\r\n  </div>\r\n)\r\n}"]},"metadata":{},"sourceType":"module"}