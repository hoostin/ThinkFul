{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\BreadCrumb.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\"; //import { listDecks} from \"./utils/api/index\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BreadCrumb({\n  decks\n}) {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const [deckId, setDeckId] = useState(null);\n  const [error, setError] = useState(undefined);\n  const [test, setTest] = useState(true);\n  const url = useRouteMatch().url;\n  const subUrls = url.split(`/`);\n  const path = useRouteMatch().path;\n  const subPath = path.split(`/`); //   useEffect(() => {\n  //     const abortController = new AbortController();\n  //     readDeck(deckId,abortController.signal).then(setDeck).catch(setError);\n  //     return () => abortController.abort();\n  // }, [])\n  // if(error){\n  //   //  return <ErrorMessage error={error} />;\n  //   console.log(\"very big bad\");\n  // }\n\n  const list = subUrls.map((aSubUrl, index) => {\n    let className;\n    console.log(index);\n    console.log(aSubUrl);\n    console.log(subPath[index]);\n\n    if (index >= subUrls.length - 1) {\n      className = \"breadcrumb-item active\";\n    } else {\n      className = \"breadcrumb-item\";\n    }\n\n    if (aSubUrl != path[index]) {\n      if (subPath[index] == `:deckId`) {\n        setDeckId(() => aSubUrl);\n      } else if (aSubUrl != `decks`) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: className,\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  });\n  console.log(url);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      class: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BreadCrumb, \"GwQiL/htgkmehp8YOX++k/+zr6M=\", false, function () {\n  return [useRouteMatch, useRouteMatch];\n});\n\n_c = BreadCrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadCrumb\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/BreadCrumb.jsx"],"names":["React","useEffect","useState","Link","NavLink","Route","Switch","useParams","useRouteMatch","readDeck","BreadCrumb","decks","deck","setDeck","deckId","setDeckId","error","setError","undefined","test","setTest","url","subUrls","split","path","subPath","list","map","aSubUrl","index","className","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,aANF,QAOO,kBAPP;AAQA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACgB,SAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBlB,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAMmB,GAAG,GAAGb,aAAa,GAAGa,GAA5B;AACA,QAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAW,GAAX,CAAhB;AACA,QAAMC,IAAI,GAAGhB,aAAa,GAAGgB,IAA7B;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACD,KAAL,CAAY,GAAZ,CAAhB,CARyC,CAS3C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAMG,IAAI,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,QAAIC,SAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACI,KAAD,CAAnB;;AACD,QAAGA,KAAK,IAAKP,OAAO,CAACW,MAAR,GAAe,CAA5B,EAAiC;AAChCH,MAAAA,SAAS,GAAG,wBAAZ;AACA,KAFD,MAEM;AAAEA,MAAAA,SAAS,GAAE,iBAAX;AAA+B;;AACtC,QAAGF,OAAO,IAAIJ,IAAI,CAACK,KAAD,CAAlB,EACA;AACE,UAAGJ,OAAO,CAACI,KAAD,CAAP,IAAkB,SAArB,EACA;AACEd,QAAAA,SAAS,CAAC,MAAKa,OAAN,CAAT;AACH,OAHC,MAIG,IAAIA,OAAO,IAAK,OAAhB,EACL;AACE,4BAAO;AAAI,UAAA,SAAS,EAAEE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AAEF;AAAC,GAnBW,CAAb;AAoBAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACE,sBACI;AAAK,kBAAW,YAAhB;AAAA,2BACN;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA,6BACE;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAmC,wBAAa,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApDuBX,U;UAKVF,a,EAECA,a;;;KAPSE,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\n//import { listDecks} from \"./utils/api/index\"\r\n\r\nexport default function BreadCrumb({decks}){\r\n  const [deck,setDeck] = useState({});\r\n  const [deckId, setDeckId] = useState(null);\r\n  const [error, setError] = useState(undefined);\r\n  const [test,setTest] = useState(true);\r\n  const url = useRouteMatch().url;\r\n  const subUrls = url.split(`/`);\r\n  const path = useRouteMatch().path;\r\n  const subPath = path.split(`/`);\r\n//   useEffect(() => {\r\n//     const abortController = new AbortController();\r\n//     readDeck(deckId,abortController.signal).then(setDeck).catch(setError);\r\n\r\n//     return () => abortController.abort();\r\n// }, [])\r\n// if(error){\r\n//   //  return <ErrorMessage error={error} />;\r\n//   console.log(\"very big bad\");\r\n// }\r\n\r\n  \r\n  \r\n  const list = subUrls.map((aSubUrl, index) => {\r\n    let className;\r\n    console.log(index)\r\n    console.log(aSubUrl)\r\n    console.log(subPath[index])\r\n   if(index >= (subUrls.length-1) ) {\r\n    className = \"breadcrumb-item active\";\r\n   } else{ className =\"breadcrumb-item\" ;}\r\n    if(aSubUrl != path[index])\r\n    {\r\n      if(subPath[index] ==`:deckId`)\r\n      {\r\n        setDeckId(()=> aSubUrl);\r\n    }\r\n    else if (aSubUrl != `decks`)\r\n    {\r\n      return <li className={className} >test</li>\r\n    }\r\n\r\n  }})\r\n  console.log(url)\r\n    return (\r\n        <nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb\">\r\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Home</li>\r\n  </ol>\r\n</nav>\r\n\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}