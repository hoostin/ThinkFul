{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Forms\\\\CardForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { updateCard, createCard, readCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardForm({\n  decks,\n  setDecks,\n  deck,\n  setDeck,\n  deckUrl\n}) {\n  _s();\n\n  let decksTemp = decks;\n  const deckTemp = deck;\n  const [formData, setFormData] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const history = useHistory();\n  const {\n    url,\n    params,\n    path\n  } = useRouteMatch();\n  const subUrls = url.split(`/`);\n  const [edit, setEdit] = useState(false); // if edit then setFormdata to current card using card id from url\n\n  useEffect(() => {\n    if (subUrls[subUrls.length - 1] === \"edit\") {\n      setEdit(true);\n      readCard(subUrls[subUrls.length - 2]).then(setFormData).catch(console.log(\"Bad magnitude 10\"));\n    }\n  }, []);\n\n  function handleChange({\n    target\n  }) {\n    setFormData(() => ({ ...formData,\n      [target.name]: target.value\n    }));\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    let theArguments = [deck.id, formData, abortController.signal];\n    let handleFunction = createCard; // if (edit) {\n    //   theArguments = [formData, abortController.signal];\n    //   handleFunction = updateCard;\n    // }\n\n    handleFunction(...theArguments) // change to update card for edit\n    .then(setFormData).then(() => {\n      deckTemp.cards = deckTemp.cards.filter(card => card.id != formData.id);\n      deckTemp.cards.push(formData);\n      setDeck(deckTemp);\n    }).then(() => {\n      decksTemp = decksTemp.filter(theDeck => theDeck.id != deck.id);\n      decksTemp.push(deckTemp);\n      setDecks(decksTemp);\n\n      if (!edit) {\n        setFormData({\n          front: \"\",\n          back: \"\"\n        });\n      } else {\n        history.push(deckUrl);\n      } // if edit got to view screen\n\n    }).catch(console.log(\"Bad magnitude 10\"));\n    return () => abortController.abort();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"createDeck\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"front\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"front\",\n        type: \"text\",\n        name: \"front\",\n        value: formData.front,\n        placeholder: \"Front side of card\",\n        className: \"form-control\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"back\",\n        type: \"text\",\n        name: \"back\",\n        value: formData.back,\n        placeholder: \"Back Side of card\",\n        className: \"form-control\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-secondary mr-1\",\n      to: deckUrl,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardForm, \"OONdDNzvSGWJQNE+Q9Kzy0T6XXI=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n\n_c = CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/Forms/CardForm.jsx"],"names":["React","useEffect","useState","Link","NavLink","Route","Switch","useHistory","useRouteMatch","updateCard","createCard","readCard","CardForm","decks","setDecks","deck","setDeck","deckUrl","decksTemp","deckTemp","formData","setFormData","front","back","history","url","params","path","subUrls","split","edit","setEdit","length","then","catch","console","log","handleChange","target","name","value","submitHandler","event","preventDefault","abortController","AbortController","theArguments","id","signal","handleFunction","cards","filter","card","push","theDeck","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { updateCard, createCard, readCard } from \"../../utils/api\";\r\n\r\nexport default function CardForm({ decks, setDecks, deck, setDeck, deckUrl }) {\r\n  let decksTemp = decks;\r\n  const deckTemp = deck;\r\n  const [formData, setFormData] = useState({ front: \"\", back: \"\" });\r\n  const history = useHistory();\r\n  const { url, params, path } = useRouteMatch();\r\n  const subUrls = url.split(`/`);\r\n  const [edit, setEdit] = useState(false);\r\n  // if edit then setFormdata to current card using card id from url\r\n  useEffect(() => {\r\n    if (subUrls[subUrls.length - 1] === \"edit\") {\r\n      setEdit(true);\r\n      readCard(subUrls[subUrls.length - 2])\r\n        .then(setFormData)\r\n        .catch(console.log(\"Bad magnitude 10\"));\r\n    }\r\n  }, []);\r\n\r\n  function handleChange({ target }) {\r\n    setFormData(() => ({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    }));\r\n  }\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    let theArguments = [deck.id, formData, abortController.signal];\r\n    let handleFunction = createCard;\r\n    // if (edit) {\r\n    //   theArguments = [formData, abortController.signal];\r\n    //   handleFunction = updateCard;\r\n    // }\r\n    handleFunction(...theArguments) // change to update card for edit\r\n      .then(setFormData)\r\n      .then(() => {\r\n        deckTemp.cards = deckTemp.cards.filter(\r\n          (card) => card.id != formData.id\r\n        );\r\n        deckTemp.cards.push(formData);\r\n        setDeck(deckTemp);\r\n      })\r\n      .then(() => {\r\n        decksTemp = decksTemp.filter((theDeck) => theDeck.id != deck.id);\r\n        decksTemp.push(deckTemp);\r\n        setDecks(decksTemp);\r\n        if (!edit) {\r\n          setFormData({ front: \"\", back: \"\" });\r\n        } else {\r\n          history.push(deckUrl);\r\n        }\r\n        // if edit got to view screen\r\n      })\r\n      .catch(console.log(\"Bad magnitude 10\"));\r\n    return () => abortController.abort();\r\n  }\r\n  return (\r\n    <form name=\"createDeck\" onSubmit={submitHandler}>\r\n      <div className=\"front\">\r\n        <label htmlFor=\"front\">Front</label>\r\n        <textarea\r\n          id=\"front\"\r\n          type=\"text\"\r\n          name=\"front\"\r\n          value={formData.front}\r\n          placeholder=\"Front side of card\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"back\">Back</label>\r\n        <textarea\r\n          id=\"back\"\r\n          type=\"text\"\r\n          name=\"back\"\r\n          value={formData.back}\r\n          placeholder=\"Back Side of card\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </div>\r\n      <Link className=\"btn btn-secondary mr-1\" to={deckUrl}>\r\n        Done\r\n      </Link>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}