{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\StudyDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { listCards } from \"../../utils/api\";\nimport BreadCrumb from \"../BreadCrumb\";\nimport StudyCard from \"../Card/StudyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyDeck({\n  decks,\n  deck\n}) {\n  _s();\n\n  const [cardAmount, setCardAmount] = useState(0);\n  let tempCards = [];\n\n  if (deck.cards != undefined) {\n    tempCards = deck.cards;\n    setCardAmount = deck.cards.length;\n  }\n\n  const [cards, setCards] = useState([...tempCards]);\n  const deckId = deck.id;\n\n  if (deck.cards != undefined) {\n    cardAmount = deck.cards.length;\n  } else {\n    cardAmount = 0;\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listCards(deckId, abortController.signal).then(setCards).then(() => {\n      setCardAmount(cards.length);\n    }).catch(console.log(\"bad magnitude 10\"));\n    return () => abortController.abort();\n  }, [deck, decks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      decks: decks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), cardAmount > 2 ? /*#__PURE__*/_jsxDEV(StudyCard, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Not Enough Cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", cardAmount, \" cards in this deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudyDeck, \"Y9ZcL/QUzquBxDClmfAK55frmMc=\");\n\n_c = StudyDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyDeck\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/Deck/StudyDeck.jsx"],"names":["React","useEffect","useState","listCards","BreadCrumb","StudyCard","StudyDeck","decks","deck","cardAmount","setCardAmount","tempCards","cards","undefined","length","setCards","deckId","id","abortController","AbortController","signal","then","catch","console","log","abort","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAoC;AAAA;;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AACA,MAAIS,SAAS,GAAG,EAAhB;;AACA,MAAIH,IAAI,CAACI,KAAL,IAAcC,SAAlB,EAA6B;AAC3BF,IAAAA,SAAS,GAAGH,IAAI,CAACI,KAAjB;AACAF,IAAAA,aAAa,GAAGF,IAAI,CAACI,KAAL,CAAWE,MAA3B;AACD;;AAED,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBb,QAAQ,CAAC,CAAC,GAAGS,SAAJ,CAAD,CAAlC;AACA,QAAMK,MAAM,GAAGR,IAAI,CAACS,EAApB;;AACA,MAAIT,IAAI,CAACI,KAAL,IAAcC,SAAlB,EAA6B;AAC3BJ,IAAAA,UAAU,GAAGD,IAAI,CAACI,KAAL,CAAWE,MAAxB;AACD,GAFD,MAEO;AACLL,IAAAA,UAAU,GAAG,CAAb;AACD;;AACDR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAhB,IAAAA,SAAS,CAACa,MAAD,EAASE,eAAe,CAACE,MAAzB,CAAT,CACGC,IADH,CACQN,QADR,EAEGM,IAFH,CAEQ,MAAM;AACVX,MAAAA,aAAa,CAACE,KAAK,CAACE,MAAP,CAAb;AACD,KAJH,EAKGQ,KALH,CAKSC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CALT;AAOA,WAAO,MAAMN,eAAe,CAACO,KAAhB,EAAb;AACD,GAVQ,EAUN,CAACjB,IAAD,EAAOD,KAAP,CAVM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,sBAAMC,IAAI,CAACkB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGjB,UAAU,GAAG,CAAb,gBACC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEG;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qEACiDH,UADjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA5CuBH,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { listCards } from \"../../utils/api\";\r\nimport BreadCrumb from \"../BreadCrumb\";\r\nimport StudyCard from \"../Card/StudyCard\";\r\n\r\nexport default function StudyDeck({ decks, deck }) {\r\n  const [cardAmount, setCardAmount] = useState(0);\r\n  let tempCards = [];\r\n  if (deck.cards != undefined) {\r\n    tempCards = deck.cards;\r\n    setCardAmount = deck.cards.length;\r\n  }\r\n\r\n  const [cards, setCards] = useState([...tempCards]);\r\n  const deckId = deck.id;\r\n  if (deck.cards != undefined) {\r\n    cardAmount = deck.cards.length;\r\n  } else {\r\n    cardAmount = 0;\r\n  }\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    listCards(deckId, abortController.signal)\r\n      .then(setCards)\r\n      .then(() => {\r\n        setCardAmount(cards.length);\r\n      })\r\n      .catch(console.log(\"bad magnitude 10\"));\r\n\r\n    return () => abortController.abort();\r\n  }, [deck, decks]);\r\n  return (\r\n    <div>\r\n      <BreadCrumb decks={decks} />\r\n      <h2> {deck.name}: Study</h2>\r\n\r\n      {cardAmount > 2 ? (\r\n        <StudyCard cards={cards} />\r\n      ) : (\r\n        <div>\r\n          <h3>Not Enough Cards.</h3>\r\n          <p>\r\n            You need at least 3 cards to study. There are {cardAmount} cards in\r\n            this deck\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}