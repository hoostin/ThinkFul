{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Forms\\\\CreateDeckForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { updateDeck, listDecks, createDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateDeckForm({\n  decks,\n  setDecks\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [newDeck, setNewDeck] = useState({\n    name: name,\n    description: description\n  });\n  const newDecks = decks;\n\n  const handleDescriptionChange = event => setDescription(event.target.value);\n\n  const handleNameChange = event => setName(event.target.value);\n\n  const history = useHistory();\n  useEffect(() => {\n    setNewDeck({\n      name: name,\n      description: description\n    });\n  }, [name, description]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createDeck(newDeck, abortController.signal).then(response => {\n      newDecks.push(response);\n      setDecks(() => newDecks);\n      history.push(`/decks/${response.id}`);\n    }).catch(setError);\n    return () => abortController.abort();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"createDeck\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleNameChange,\n        value: name,\n        placeholder: \"Deck Name\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        placeholder: \"Brief description of the deck\",\n        className: \"form-control\",\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-secondary mr-1\",\n      to: `/`,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeckForm, \"momocKzEp+HFwmyb1wu80UrMxJE=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeckForm\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/Forms/CreateDeckForm.jsx"],"names":["React","useEffect","useState","Link","NavLink","Route","Switch","useHistory","useRouteMatch","updateDeck","listDecks","createDeck","CreateDeckForm","decks","setDecks","name","setName","description","setDescription","newDeck","setNewDeck","newDecks","handleDescriptionChange","event","target","value","handleNameChange","history","submitHandler","preventDefault","abortController","AbortController","signal","then","response","push","id","catch","setError","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { updateDeck, listDecks, createDeck } from \"../../utils/api\";\r\n\r\nexport default function CreateDeckForm({ decks, setDecks }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [newDeck, setNewDeck] = useState({\r\n    name: name,\r\n    description: description,\r\n  });\r\n  const newDecks = decks;\r\n\r\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\r\n  const handleNameChange = (event) => setName(event.target.value);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setNewDeck({ name: name, description: description });\r\n  }, [name, description]);\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    createDeck(newDeck, abortController.signal)\r\n      .then((response) => {\r\n        newDecks.push(response);\r\n        setDecks(() => newDecks);\r\n        history.push(`/decks/${response.id}`);\r\n      })\r\n      .catch(setError);\r\n    return () => abortController.abort();\r\n  }\r\n  return (\r\n    <form name=\"createDeck\" onSubmit={submitHandler}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleNameChange}\r\n          value={name}\r\n          placeholder=\"Deck Name\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\">Description </label>\r\n        <textarea\r\n          id=\"description\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={description}\r\n          placeholder=\"Brief description of the deck\"\r\n          className=\"form-control\"\r\n          onChange={handleDescriptionChange}\r\n        ></textarea>\r\n      </div>\r\n      <Link className=\"btn btn-secondary mr-1\" to={`/`}>\r\n        Cancel\r\n      </Link>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}