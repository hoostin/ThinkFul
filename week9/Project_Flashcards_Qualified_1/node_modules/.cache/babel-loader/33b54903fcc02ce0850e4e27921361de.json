{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\BreadCrumb.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\"; //import { listDecks} from \"./utils/api/index\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BreadCrumb({\n  decks\n}) {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const {\n    url,\n    params,\n    path\n  } = useRouteMatch();\n  const [error, setError] = useState(undefined);\n  const subUrls = url.split(`/`); //console.log(useRouteMatch());\n  // console.log(path);\n\n  let deckId;\n\n  for (let param in params) {\n    if (param === \"deckId\") {\n      deckId = params[param];\n    }\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, [decks]);\n  const list = subUrls.map((aSubUrl, index) => {\n    //console.log(aSubUrl);\n    if (deck != undefined) {\n      let className;\n\n      if (index >= subUrls.length - 1) {\n        className = \"breadcrumb-item active\";\n\n        if (aSubUrl == deckId && deckId != \"new\") {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: className,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this);\n        }\n\n        let value = \"  \";\n\n        switch (aSubUrl) {\n          case \"new\":\n            if (subUrls[index - 1] === \"cards\") {\n              value = \"Add Card\";\n            } else {\n              value = \"Create Deck\";\n            }\n\n            break;\n\n          case \"study\":\n            value = \"Study\";\n            break;\n\n          case \"edit\":\n            if (subUrls[index - 2] === \"cards\") {\n              value = `Edit Card ${subUrls[index - 1]}`;\n            } else {\n              value = \"Edit Deck\";\n            }\n\n            break;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: className,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      } else {\n        className = \"breadcrumb-item\";\n      }\n\n      if (aSubUrl != \"decks\" && aSubUrl != \"\") {\n        if (aSubUrl == deckId) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: className,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${aSubUrl}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this);\n        }\n      } else {\n        if (aSubUrl == \"\") {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: className,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `${aSubUrl}`,\n              className: \"oi oi-home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BreadCrumb, \"iudmDsT7lFKMq+8gHvtJuDnRLM4=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = BreadCrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadCrumb\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/BreadCrumb.jsx"],"names":["React","useEffect","useState","Link","useRouteMatch","readDeck","BreadCrumb","decks","deck","setDeck","url","params","path","error","setError","undefined","subUrls","split","deckId","param","console","log","abortController","AbortController","signal","then","catch","abort","list","map","aSubUrl","index","className","length","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\n//import { listDecks} from \"./utils/api/index\"\r\n\r\nexport default function BreadCrumb({ decks }) {\r\n  const [deck, setDeck] = useState({});\r\n  const { url, params, path } = useRouteMatch();\r\n  const [error, setError] = useState(undefined);\r\n  const subUrls = url.split(`/`);\r\n  //console.log(useRouteMatch());\r\n  // console.log(path);\r\n  let deckId;\r\n  for (let param in params) {\r\n    if (param === \"deckId\") {\r\n      deckId = params[param];\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error);\r\n  }\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\r\n    return () => abortController.abort();\r\n  }, [decks]);\r\n  const list = subUrls.map((aSubUrl, index) => {\r\n    //console.log(aSubUrl);\r\n    if (deck != undefined) {\r\n      let className;\r\n      if (index >= subUrls.length - 1) {\r\n        className = \"breadcrumb-item active\";\r\n        if (aSubUrl == deckId && deckId != \"new\") {\r\n          return <li className={className}>{deck.name}</li>;\r\n        }\r\n        let value = \"  \";\r\n        switch (aSubUrl) {\r\n          case \"new\":\r\n            if (subUrls[index - 1] === \"cards\") {\r\n              value = \"Add Card\";\r\n            } else {\r\n              value = \"Create Deck\";\r\n            }\r\n\r\n            break;\r\n          case \"study\":\r\n            value = \"Study\";\r\n            break;\r\n          case \"edit\":\r\n            if (subUrls[index - 2] === \"cards\") {\r\n              value = `Edit Card ${subUrls[index - 1]}`;\r\n            } else {\r\n              value = \"Edit Deck\";\r\n            }\r\n\r\n            break;\r\n        }\r\n        return <li className={className}>{value}</li>;\r\n      } else {\r\n        className = \"breadcrumb-item\";\r\n      }\r\n      if (aSubUrl != \"decks\" && aSubUrl != \"\") {\r\n        if (aSubUrl == deckId) {\r\n          return (\r\n            <li className={className}>\r\n              <Link to={`/decks/${aSubUrl}`}>{deck.name}</Link>\r\n            </li>\r\n          );\r\n        }\r\n      } else {\r\n        if (aSubUrl == \"\") {\r\n          return (\r\n            <li className={className}>\r\n              <Link to={`${aSubUrl}`} className=\"oi oi-home\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">{list}</ol>\r\n    </nav>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}