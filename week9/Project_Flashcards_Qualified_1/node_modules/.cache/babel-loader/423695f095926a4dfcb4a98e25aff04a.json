{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week9\\\\qualafied\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\ViewDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import CreateDeckButton from \"./CreateDeckButton\";\n\nimport DeckView from \"./DeckView\"; //import Header from \"../Header\";\n//import NotFound from \"../NotFound\";\n\nimport { Link, NavLink, Route, Switch, useRouteMatch } from \"react-router-dom\"; // import Deck from \"./Deck\";\n// import { listDecks} from \"../../utils/api/index\"\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport { readDeck } from \"../../utils/api\";\nimport CardList from \"../Card/CardList\";\nimport StudyDeck from \"./StudyDeck\";\nimport EditDeck from \"./EditDeck\";\nimport CreateCard from \"../Card/CreateCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewDeck({\n  decks,\n  setDecks\n}) {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const {\n    path,\n    url,\n    params\n  } = useRouteMatch();\n  const [error, setError] = useState(undefined);\n  const subUrls = url.split(`/`);\n  let deckId;\n\n  for (let param in params) {\n    if (param === \"deckId\") {\n      deckId = params[param];\n    }\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(CreateCard, {\n          decks: decks,\n          deck: deck,\n          setDeck: setDeck,\n          deckUrl: url,\n          setDecks: setDecks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/edit`,\n        children: /*#__PURE__*/_jsxDEV(EditDeck, {\n          decks: decks,\n          deck: deck,\n          setDeck: setDeck,\n          deckUrl: url,\n          setDecks: setDecks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/study`,\n        children: /*#__PURE__*/_jsxDEV(StudyDeck, {\n          decks: decks,\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}`,\n        children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n          decks: decks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeckView, {\n          deck: deck,\n          url: url,\n          decks: decks,\n          setDecks: setDecks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardList, {\n          deck: deck,\n          deckId: deckId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewDeck, \"3BZPPooj/jz5Ts+f9ObJJvBW63c=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["D:/Thinkful/week9/qualafied/Project_Flashcards_Qualified_1/src/Layout/Deck/ViewDeck.jsx"],"names":["React","useEffect","useState","DeckView","Link","NavLink","Route","Switch","useRouteMatch","BreadCrumb","readDeck","CardList","StudyDeck","EditDeck","CreateCard","ViewDeck","decks","setDecks","deck","setDeck","path","url","params","error","setError","undefined","subUrls","split","deckId","param","abortController","AbortController","signal","then","catch","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import CreateDeckButton from \"./CreateDeckButton\";\r\nimport DeckView from \"./DeckView\";\r\n//import Header from \"../Header\";\r\n//import NotFound from \"../NotFound\";\r\nimport { Link, NavLink, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n// import Deck from \"./Deck\";\r\n// import { listDecks} from \"../../utils/api/index\"\r\nimport BreadCrumb from \"../BreadCrumb\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport CardList from \"../Card/CardList\";\r\nimport StudyDeck from \"./StudyDeck\";\r\nimport EditDeck from \"./EditDeck\";\r\nimport CreateCard from \"../Card/CreateCard\";\r\n\r\nexport default function ViewDeck({ decks, setDecks }) {\r\n  const [deck, setDeck] = useState({});\r\n  const { path, url, params } = useRouteMatch();\r\n  const [error, setError] = useState(undefined);\r\n  const subUrls = url.split(`/`);\r\n  let deckId;\r\n  for (let param in params) {\r\n    if (param === \"deckId\") {\r\n      deckId = params[param];\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={`${path}/cards/new`}>\r\n          <CreateCard\r\n            decks={decks}\r\n            deck={deck}\r\n            setDeck={setDeck}\r\n            deckUrl={url}\r\n            setDecks={setDecks}\r\n          />\r\n        </Route>\r\n        <Route path={`${path}/edit`}>\r\n          <EditDeck\r\n            decks={decks}\r\n            deck={deck}\r\n            setDeck={setDeck}\r\n            deckUrl={url}\r\n            setDecks={setDecks}\r\n          />\r\n        </Route>\r\n        <Route path={`${path}/study`}>\r\n          <StudyDeck decks={decks} deck={deck} />\r\n        </Route>\r\n        <Route path={`${path}`}>\r\n          <BreadCrumb decks={decks} />\r\n          <DeckView deck={deck} url={url} decks={decks} setDecks={setDecks} />\r\n          <CardList deck={deck} deckId={deckId} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}