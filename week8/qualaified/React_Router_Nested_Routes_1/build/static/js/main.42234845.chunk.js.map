{"version":3,"sources":["Users.js","UserPost.js","UserPosts.js","UserProfile.js","User.js","App.js","index.js"],"names":["Users","users","rows","map","user","key","id","username","name","email","to","UserPost","posts","postId","useParams","Error","post","find","title","body","UserPosts","url","useRouteMatch","postLinks","data-testid","path","UserProfile","phone","company","website","User","userId","App","className","exact","ReactDOM","render","document","getElementById"],"mappings":"yj5BAsCeA,EAnCM,SAAC,GAAoB,IAAD,IAAjBC,MAEhBC,QAFiC,MAAT,GAAS,GAEpBC,KAAI,SAAAC,GAAI,OACzB,wBAAIC,IAAKD,EAAKE,IACZ,4BAAKF,EAAKE,IACV,4BAAKF,EAAKG,UACV,4BAAKH,EAAKI,MACV,4BAAKJ,EAAKK,OACV,4BACE,kBAAC,IAAD,CAAMC,GAAE,gBAAWN,EAAKE,KAAxB,gBAKN,OACE,iCACE,qCACA,+BACE,+BACA,4BACE,iCACA,yCACA,oCACA,qCACA,sCAGF,+BACCJ,M,QCVMS,EAlBS,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,EAElCC,EAAWC,cAAXD,OAER,IAAKA,EACH,MAAM,IAAIE,MAAM,+BAGlB,IAAMC,EAAOJ,EAAMK,MAAK,SAAAD,GAAI,MAAI,UAAGA,EAAKV,MAASO,KAEjD,OACE,iCACE,4BAAKG,EAAKE,OACV,2BAAIF,EAAKG,QCiBAC,EA7BU,SAAC,GAAoB,IAAD,IAAjBR,aAAiB,MAAT,GAAS,EACnCS,EAAQC,cAARD,IAEFE,EAAYX,EAAMT,KAAI,SAACa,GAAD,OAC1B,wBAAIX,IAAKW,EAAKV,IACZ,kBAAC,IAAD,CAAMI,GAAE,UAAKW,EAAL,YAAYL,EAAKV,IAAMkB,cAAA,oBAA0BR,EAAKV,KAC3DU,EAAKE,WAKZ,OACE,6BACE,4BAAKK,GACL,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAI,UAAKJ,EAAL,aACT,kBAAC,EAAD,CAAUT,MAAOA,KAEnB,kBAAC,IAAD,CAAOa,KAAI,UAAKJ,IACd,yDCoBGK,EA1CY,SAAC,GAAkB,IAAD,IAAftB,YAAe,MAAR,GAAQ,EAC3C,OACE,6BACE,6BACE,6BACE,6CAEF,6BAAMA,EAAKG,WAEb,6BACA,6BACE,6BACE,yCAEF,6BAAMH,EAAKK,QAEb,6BACA,6BACE,6BACE,yCAEF,6BAAML,EAAKuB,QAEb,6BACA,6BACE,6BACE,2CAEF,8BAAOvB,EAAKwB,SAAW,IAAIpB,OAE7B,6BACA,6BACE,6BACE,2CAEF,6BAAMJ,EAAKyB,UAEb,+BCgBSC,EA3CK,SAAC,GAAoB,IAAD,IAAjB7B,aAAiB,MAAT,GAAS,EAC9B8B,EAAWjB,cAAXiB,OACAV,EAAQC,cAARD,IACR,IAAKU,EACH,MAAM,IAAIhB,MAAM,+BAGlB,IAAMX,EAAOH,EAAMgB,MAAK,SAACb,GAAD,MAAU,UAAGA,EAAKE,MAASyB,KAEnD,OAAI3B,EAEA,iCACE,kBAAC,IAAD,CAAMM,GAAG,KAAT,aACA,6BACE,4BAAKN,EAAKI,MACV,4BACE,4BACE,kBAAC,IAAD,CAASE,GAAE,UAAKW,GAAOG,cAAY,gBAAnC,YAIF,4BACE,kBAAC,IAAD,CAASd,GAAE,UAAKW,EAAL,UAAkBG,cAAY,cAAzC,WAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAL,WACT,kBAAC,EAAD,CAAWT,MAAOR,EAAKQ,SAEzB,kBAAC,IAAD,CAAOa,KAAI,UAAKJ,IACd,kBAAC,EAAD,CAAajB,KAAMA,QAQxB,8CCjCM4B,MAbf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAOC,OAAO,EAAMT,KAAK,KACvB,kBAAC,EAAD,CAAOxB,MAAOA,KAEhB,kBAAC,IAAD,CAAOwB,KAAK,iBACV,kBAAC,EAAD,CAAMxB,MAAOA,O,MCPrBkC,IAASC,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBC,SAASC,eAAe,W","file":"static/js/main.42234845.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport const Users = ({ users = [] }) => {\n\n  const rows = users.map(user => (\n    <tr key={user.id}>\n      <td>{user.id}</td>\n      <td>{user.username}</td>\n      <td>{user.name}</td>\n      <td>{user.email}</td>\n      <td>\n        <Link to={`/user/${user.id}`}>View -></Link>\n      </td>\n    </tr>\n  ))\n\n  return (\n    <section>\n      <h2>Users</h2>\n      <table>\n        <thead>\n        <tr>\n          <th>#</th>\n          <th>User Name</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>View</th>\n        </tr>\n        </thead>\n        <tbody>\n        {rows}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default Users;\n","import React from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nexport const UserPost = ({ posts = [] }) => {\n\n  const { postId } = useParams()\n\n  if (!postId) {\n    throw new Error(\"No URL parameter for postId\")\n  }\n\n  const post = posts.find(post => `${post.id}` === postId)\n\n  return (\n    <article>\n      <h3>{post.title}</h3>\n      <p>{post.body}</p>\n    </article>\n  );\n};\n\nexport default UserPost;\n","import React from \"react\";\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport UserPost from \"./UserPost\";\n\nexport const UserPosts = ({ posts = [] }) => {\n  const { url } = useRouteMatch();\n\n  const postLinks = posts.map((post) => (\n    <li key={post.id}>\n      <Link to={`${url}/${post.id}`} data-testid={`user-post-${post.id}`}>\n        {post.title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul>{postLinks}</ul>\n      <div>\n        <Switch>\n          <Route path={`${url}/:postId`}>\n            <UserPost posts={posts} />\n          </Route>\n          <Route path={`${url}`}>\n            <p>\"No post selected...\"</p>\n          </Route>\n        </Switch>\n        {/* // TODO: Display <UserPost /> if there is a :postId in the url, otherwise display \"No post selected...\" */}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPosts;\n","import React from \"react\";\n\nexport const UserProfile = ({ user = {}}) => {\n  return (\n    <div>\n      <div>\n        <div>\n          <label>User Name</label>\n        </div>\n        <div>{user.username}</div>\n      </div>\n      <hr/>\n      <div>\n        <div>\n          <label>EMail</label>\n        </div>\n        <div>{user.email}</div>\n      </div>\n      <hr/>\n      <div>\n        <div>\n          <label>Phone</label>\n        </div>\n        <div>{user.phone}</div>\n      </div>\n      <hr/>\n      <div>\n        <div>\n          <label>Company</label>\n        </div>\n        <div>{(user.company || {}).name}</div>\n      </div>\n      <hr/>\n      <div>\n        <div>\n          <label>Website</label>\n        </div>\n        <div>{user.website}</div>\n      </div>\n      <hr/>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport {\n  Link,\n  NavLink,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport UserPosts from \"./UserPosts\";\nimport UserProfile from \"./UserProfile\";\n\nexport const User = ({ users = [] }) => {\n  const { userId } = useParams();\n  const { url } = useRouteMatch();\n  if (!userId) {\n    throw new Error(\"No URL parameter for userId\");\n  }\n\n  const user = users.find((user) => `${user.id}` === userId);\n\n  if (user) {\n    return (\n      <section>\n        <Link to=\"/\"> &lt;- Users</Link>\n        <div>\n          <h2>{user.name}</h2>\n          <ul>\n            <li>\n              <NavLink to={`${url}`} data-testid=\"user-profile\">\n                Profile\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={`${url}/posts`} data-testid=\"user-posts\">\n                Posts\n              </NavLink>\n            </li>\n          </ul>\n          <Switch>\n            <Route path={`${url}/posts`}>\n              <UserPosts posts={user.posts} />\n            </Route>\n            <Route path={`${url}`}>\n              <UserProfile user={user} />\n            </Route>\n          </Switch>\n          {/* <UserProfile user={user} /> */}\n        </div>\n      </section>\n    );\n  }\n  return <p>User not found</p>;\n};\n\nexport default User;\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport Users from \"./Users\";\nimport users from './data.json';\nimport User from \"./User\";\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Route exact={true} path=\"/\">\n        <Users users={users}/>\n      </Route>\n      <Route path=\"/user/:userId\">\n        <User users={users}/>\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));"],"sourceRoot":""}