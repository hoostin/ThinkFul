{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week8\\\\qualaified\\\\React_Router_Nested_Routes_1\\\\src\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, NavLink, Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\nimport UserPosts from \"./UserPosts\";\nimport UserProfile from \"./UserProfile\";\nexport const User = ({\n  users = []\n}) => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n\n  if (!userId) {\n    throw new Error(\"No URL parameter for userId\");\n  }\n\n  const user = users.find(user => `${user.id}` === userId);\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \" <- Users\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${useRouteMatch.path}`,\n      \"data-testid\": \"user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Profile\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${useRouteMatch.url}/posts`,\n      \"data-testid\": \"user-posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Posts\"))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/users/:userId/posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserPosts, {\n      posts: user.posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/users/:userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserProfile, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"User not found\");\n};\n\n_s(User, \"r0rqsLfWJTH7w5cXk9h+Af0W8oI=\", false, function () {\n  return [useParams];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["D:/Thinkful/week8/qualaified/React_Router_Nested_Routes_1/src/User.js"],"names":["React","Link","NavLink","Route","Switch","useParams","useRouteMatch","UserPosts","UserProfile","User","users","userId","Error","user","find","id","name","path","url","posts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,aANF,QAOO,kBAPP;AAQA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;;AAEA,MAAI,CAACM,MAAL,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAYD,IAAD,IAAW,GAAEA,IAAI,CAACE,EAAG,EAAX,KAAiBJ,MAAtC,CAAb;;AAEA,MAAIE,IAAJ,EAAU;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACG,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAG,GAAEV,aAAa,CAACW,IAAK,EAAnC;AAAsC,qBAAY,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,EAAE,EAAG,GAAEX,aAAa,CAACY,GAAI,QAD3B;AAEE,qBAAY,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,CAFF,eAiBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEL,IAAI,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEN,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAjBF,CAFF,CADF;AAgCD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,CA5CM;;GAAMJ,I;UACQJ,S;;;KADRI,I;AA8Cb,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  Link,\n  NavLink,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport UserPosts from \"./UserPosts\";\nimport UserProfile from \"./UserProfile\";\n\nexport const User = ({ users = [] }) => {\n  const { userId } = useParams();\n\n  if (!userId) {\n    throw new Error(\"No URL parameter for userId\");\n  }\n\n  const user = users.find((user) => `${user.id}` === userId);\n\n  if (user) {\n    return (\n      <section>\n        <Link to=\"/\"> &lt;- Users</Link>\n        <div>\n          <h2>{user.name}</h2>\n          <ul>\n            <li>\n              <NavLink to={`${useRouteMatch.path}`} data-testid=\"user-profile\">\n                Profile\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`${useRouteMatch.url}/posts`}\n                data-testid=\"user-posts\"\n              >\n                Posts\n              </NavLink>\n            </li>\n          </ul>\n          <Switch>\n            <Route path={\"/users/:userId/posts\"}>\n              <UserPosts posts={user.posts} />\n            </Route>\n            <Route path={\"/users/:userId\"}>\n              <UserProfile user={user} />\n            </Route>\n          </Switch>\n          {/* <UserProfile user={user} /> */}\n        </div>\n      </section>\n    );\n  }\n  return <p>User not found</p>;\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}