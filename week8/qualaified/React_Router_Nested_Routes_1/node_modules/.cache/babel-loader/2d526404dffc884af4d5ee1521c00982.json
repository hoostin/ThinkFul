{"ast":null,"code":"import React from\"react\";import{Link,Route,Switch,useRouteMatch}from\"react-router-dom\";import UserPost from\"./UserPost\";export var UserPosts=function UserPosts(_ref){var _ref$posts=_ref.posts,posts=_ref$posts===void 0?[]:_ref$posts;var _useRouteMatch=useRouteMatch(),url=_useRouteMatch.url;var postLinks=posts.map(function(post){return/*#__PURE__*/React.createElement(\"li\",{key:post.id},/*#__PURE__*/React.createElement(Link,{to:\"\".concat(url,\"/\").concat(post.id),\"data-testid\":\"user-post-\".concat(post.id)},post.title));});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,postLinks),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"\".concat(url,\"/:postId\")},/*#__PURE__*/React.createElement(UserPost,{posts:posts})),/*#__PURE__*/React.createElement(Route,{path:\"\".concat(url)},/*#__PURE__*/React.createElement(\"p\",null,\"\\\"No post selected...\\\"\")))));};export default UserPosts;","map":{"version":3,"sources":["D:/Thinkful/week8/qualaified/React_Router_Nested_Routes_1/src/UserPosts.js"],"names":["React","Link","Route","Switch","useRouteMatch","UserPost","UserPosts","posts","url","postLinks","map","post","id","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,aAA9B,KAAmD,kBAAnD,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoB,qBAAjBC,KAAiB,CAAjBA,KAAiB,qBAAT,EAAS,+BAC3BH,aAAa,EADc,CACnCI,GADmC,gBACnCA,GADmC,CAG3C,GAAMC,CAAAA,SAAS,CAAGF,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,qBAC1B,0BAAI,GAAG,CAAEA,IAAI,CAACC,EAAd,eACE,oBAAC,IAAD,EAAM,EAAE,WAAKJ,GAAL,aAAYG,IAAI,CAACC,EAAjB,CAAR,CAA+B,kCAA0BD,IAAI,CAACC,EAA/B,CAA/B,EACGD,IAAI,CAACE,KADR,CADF,CAD0B,EAAV,CAAlB,CAQA,mBACE,4CACE,8BAAKJ,SAAL,CADF,cAEE,4CACE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,WAAKD,GAAL,YAAX,eACE,oBAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,EADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,WAAKC,GAAL,CAAX,eACE,uDADF,CAJF,CADF,CAFF,CADF,CAgBD,CA3BM,CA6BP,cAAeF,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport UserPost from \"./UserPost\";\n\nexport const UserPosts = ({ posts = [] }) => {\n  const { url } = useRouteMatch();\n\n  const postLinks = posts.map((post) => (\n    <li key={post.id}>\n      <Link to={`${url}/${post.id}`} data-testid={`user-post-${post.id}`}>\n        {post.title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul>{postLinks}</ul>\n      <div>\n        <Switch>\n          <Route path={`${url}/:postId`}>\n            <UserPost posts={posts} />\n          </Route>\n          <Route path={`${url}`}>\n            <p>\"No post selected...\"</p>\n          </Route>\n        </Switch>\n        {/* // TODO: Display <UserPost /> if there is a :postId in the url, otherwise display \"No post selected...\" */}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPosts;\n"]},"metadata":{},"sourceType":"module"}