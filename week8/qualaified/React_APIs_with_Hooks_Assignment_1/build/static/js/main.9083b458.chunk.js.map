{"version":3,"sources":["AlbumList.js","UserList.js","App.js","index.js"],"names":["AlbumList","user","albums","Object","entries","length","map","album","id","title","UserList","users","setCurrentUser","className","type","onClick","name","App","useState","setUsers","currentUser","setAlbums","document","useEffect","console","log","abortController","AbortController","a","fetch","signal","response","json","responseRead","loadUsers","abort","theAlbums","loadAlbum","ReactDOM","render","StrictMode","getElementById"],"mappings":"4RAiBeA,MAff,YAA2C,IAAD,IAArBC,YAAqB,MAAd,GAAc,EAAVC,EAAU,EAAVA,OAC9B,OAAoC,IAAhCC,OAAOC,QAAQH,GAAMI,OAErB,6BACGH,EAAOI,KAAI,SAACC,GAAD,OACV,+BACGA,EAAMC,GADT,MACgBD,EAAME,QADbF,EAAMC,SAOhB,yECEME,MAdf,YAA8C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eACzB,OACE,oBAAIC,UAAU,YAAd,SACGF,EAAML,KAAI,SAACL,GAAD,OACT,6BACE,wBAAQa,KAAK,SAASC,QAAS,kBAAMH,EAAeX,IAApD,SACGA,EAAKe,QAFDf,EAAKO,UCqEPS,MArEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNP,EADM,KACCQ,EADD,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOR,EAFP,OAGeM,mBAAS,IAHxB,mBAGNhB,EAHM,KAGEmB,EAHF,KAIPZ,EAAQa,SAASb,MAqDvB,OAnDAc,qBAAU,WACRD,SAASb,MAAQ,oBACjBe,QAAQC,IAAIH,SAASb,OACrB,IAAMiB,EAAkB,IAAIC,gBAHd,4CAId,8BAAAC,EAAA,+EAE2BC,MACrB,6CACA,CAAEC,OAAQJ,EAAgBI,SAJhC,cAEUC,EAFV,gBAM+BA,EAASC,OANxC,OAMUC,EANV,OAQId,EAASc,GARb,qDAUuB,eAAf,KAAMjB,KAVd,iBAWMQ,QAAQC,IAAI,WAXlB,8FAJc,sBAsBd,OAtBc,mCAqBdS,GACO,WACLZ,SAASb,MAAQA,EACjBiB,EAAgBS,WAEjB,IAEHZ,qBAAU,WACR,IAAMG,EAAkB,IAAIC,gBADd,4CAEd,8BAAAC,EAAA,+EAE2BC,MAAM,sDAAD,OAC4BT,EAAYZ,IAClE,CAAEsB,OAAQJ,EAAgBI,SAJhC,cAEUC,EAFV,gBAM4BA,EAASC,OANrC,OAMUI,EANV,OAOIf,EAAUe,GAPd,qDASuB,eAAf,KAAMpB,KATd,iBAUMQ,QAAQC,IAAI,WAVlB,8FAFc,sBAmBd,OAnBc,mCAkBdY,GACO,WACLX,EAAgBS,WAEjB,CAACf,IAEF,sBAAKP,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAUF,MAAOA,EAAOC,eAAgBA,MAE1C,qBAAKC,UAAU,eAAf,SACE,cAAC,EAAD,CAAWZ,KAAMmB,EAAalB,OAAQA,UCjE9CoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,W","file":"static/js/main.9083b458.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nfunction AlbumList({ user = {}, albums }) {\n  if (Object.entries(user).length !== 0) {\n    return (\n      <ul>\n        {albums.map((album) => (\n          <li key={album.id}>\n            {album.id} - {album.title}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return <p>Please click on a user name to the left</p>;\n}\n\nexport default AlbumList;\n","import React from \"react\";\n\nfunction UserList({ users, setCurrentUser }) {\n  return (\n    <ul className=\"user-list\">\n      {users.map((user) => (\n        <li key={user.id}>\n          <button type=\"button\" onClick={() => setCurrentUser(user)}>\n            {user.name}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default UserList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport AlbumList from \"./AlbumList\";\nimport UserList from \"./UserList\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [albums, setAlbums] = useState([]);\n  const title = document.title;\n  // Load data from https://jsonplaceholder.typicode.com/todos?userId=3\n  useEffect(() => {\n    document.title = \"Awesome Album App\";\n    console.log(document.title);\n    const abortController = new AbortController();\n    async function loadUsers() {\n      try {\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/users\",\n          { signal: abortController.signal }\n        );\n        const responseRead = await response.json();\n\n        setUsers(responseRead);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadUsers();\n    return () => {\n      document.title = title;\n      abortController.abort();\n    };\n  }, []);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function loadAlbum() {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/albums?userId=${currentUser.id}`,\n          { signal: abortController.signal }\n        );\n        const theAlbums = await response.json();\n        setAlbums(theAlbums);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadAlbum();\n    return () => {\n      abortController.abort();\n    };\n  }, [currentUser]);\n  return (\n    <div className=\"App\">\n      <div className=\"left column\">\n        <UserList users={users} setCurrentUser={setCurrentUser} />\n      </div>\n      <div className=\"right column\">\n        <AlbumList user={currentUser} albums={albums} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}